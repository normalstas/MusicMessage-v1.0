<UserControl x:Class="MusicMessage.UserCtrls.ChatUserCtrl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MusicMessage.UserCtrls"
             xmlns:models="clr-namespace:MusicMessage.Models"
             xmlns:conv="clr-namespace:MusicMessage.Converter"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             MinWidth="300" MinHeight="200"
             Loaded="UserControl_Loaded">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <Style x:Key="MyMessageContainerStyle" TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
            <Setter Property="Padding" Value="0,2,5,2"/>
            <Setter Property="ContextMenu" Value="{x:Null}"/>
            <!-- Отключаем контекстное меню у элементов -->
        </Style>
        <Style x:Key="EditMenuItemStyle" TargetType="MenuItem">
            <Setter Property="Foreground" Value="#2E7D32"/>
            <Setter Property="FontWeight" Value="Medium"/>
        </Style>
        <Style x:Key="OtherMessageContainerStyle" TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="5,2,0,2"/>
            <Setter Property="ContextMenu" Value="{x:Null}"/>
            <!-- Отключаем контекстное меню у элементов -->
        </Style>
        <!-- Стили для контейнеров сообщений -->
        <Style x:Key="VoiceMessageButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PlayButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        CornerRadius="20">
                            <ContentPresenter HorizontalAlignment="Center"
                                    VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="WaveformStyle" TargetType="ItemsControl">
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border Width="3" 
                            Height="{Binding}" 
                            Margin="1,0" 
                            Background="#555555"
                            CornerRadius="2"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SmartContextMenuStyle" TargetType="ContextMenu">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="8"/>
        </Style>

        <Style x:Key="DeleteMenuItemStyle" TargetType="MenuItem">
            <Setter Property="Foreground" Value="#d32f2f"/>
            <Setter Property="FontWeight" Value="Medium"/>
        </Style>

        <Style x:Key="DeleteForAllMenuItemStyle" TargetType="MenuItem">
            <Setter Property="Foreground" Value="#b71c1c"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <Style x:Key="ActionMenuItemStyle" TargetType="MenuItem">
            <Setter Property="Foreground" Value="#1976d2"/>
        </Style>
        <Style x:Key="ReplyContainerStyle" TargetType="Border">
            <Setter Property="Background" Value="#FFE9F5FF"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#FFBBDEFB"/>
        </Style>

        <Style x:Key="ReplyLineStyle" TargetType="Border">
            <Setter Property="Background" Value="#FF2196F3"/>
            <Setter Property="Width" Value="3"/>
            <Setter Property="Margin" Value="0,0,8,0"/>
            <Setter Property="CornerRadius" Value="2"/>
        </Style>

        <Style x:Key="ReplyTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#FF1976D2"/>
        </Style>

        <Style x:Key="ReplyContentStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Foreground" Value="#FF424242"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="MaxHeight" Value="40"/>
        </Style>
        <Style x:Key="ClickableReplyContainerStyle" TargetType="Border" BasedOn="{StaticResource ReplyContainerStyle}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="ToolTip" Value="Перейти к сообщению"/>
            <Style.Triggers>
                <!-- Анимация при наведении -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFD4E6F1"/>
                    <Setter Property="BorderBrush" Value="#FF64B5F6"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="HorizontalReactionButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="3,1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        CornerRadius="12"
                        Padding="3,2">
                            <!-- Orientation="Vertical" - эмодзи СВЕРХУ, никнейм СНИЗУ -->
                            <StackPanel Orientation="Vertical" 
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
                                <TextBlock Text="{Binding Emoji}" 
                                   FontSize="14"
                                   HorizontalAlignment="Center"/>
                                <TextBlock Text="{Binding User.UserName}" 
                                   FontSize="9"
                                   Foreground="Gray"
                                   HorizontalAlignment="Center"
                                   TextAlignment="Center"/>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#20000000"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Storyboard x:Key="PulseAnimation" x:Name="PulseAnimation" RepeatBehavior="Forever">
            <!-- Пульсация opacity -->
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0.9"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="0.9"/>
            </DoubleAnimationUsingKeyFrames>

            <!-- Пульсация фона -->
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                <EasingColorKeyFrame KeyTime="0:0:0" Value="#FFE9F5FF"/>
                <EasingColorKeyFrame KeyTime="0:0:0.7" Value="#FFBBDEFB"/>
                <EasingColorKeyFrame KeyTime="0:0:1.4" Value="#FFE9F5FF"/>
            </ColorAnimationUsingKeyFrames>

            <!-- Пульсация границы -->
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                <EasingColorKeyFrame KeyTime="0:0:0" Value="#FFBBDEFB"/>
                <EasingColorKeyFrame KeyTime="0:0:0.7" Value="#FF2196F3"/>
                <EasingColorKeyFrame KeyTime="0:0:1.4" Value="#FFBBDEFB"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ReactionAnimation" x:Name="ReactionAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="RemoveReactionAnimation" x:Name="RemoveReactionAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1.0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1.0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1.0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <!-- Конвертеры -->
        <conv:MessageStyleMultiConverter x:Key="MessageStyleMultiConverter"/>
        <conv:ShowUserNameConverter x:Key="ShowUserNameConverter"/>
        <conv:MessageAlignmentConverter x:Key="MessageAlignmentConverter"/>
        <conv:MessageBackgroundConverter x:Key="MessageBackgroundConverter"/>
        <conv:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
        <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <conv:VoiceMessageBackgroundConverter x:Key="VoiceMessageBackgroundConverter"/>
        <conv:MultiBoolToVisibilityConverter x:Key="MultiBoolToVisibilityConverter"/>
        <conv:PlaybackTimeConverter x:Key="PlaybackTimeConverter"/>
        <conv:IsMyMessageMultiConverter x:Key="IsMyMessageMultiConverter"/>
        <conv:ReplyVisibilityConverter x:Key="ReplyVisibilityConverter"/>
        <conv:EditedIndicatorConverter x:Key="EditedIndicatorConverter"/>

        <!-- Шаблон сообщения -->
        <DataTemplate DataType="{x:Type models:Message}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.HorizontalAlignment>
                    <MultiBinding Converter="{StaticResource MessageAlignmentConverter}">
                        <Binding Path="SenderId"/>
                        <Binding Path="DataContext.CurrentUserId" RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                    </MultiBinding>
                </Grid.HorizontalAlignment>
                <Border Grid.Row="0"
        Style="{StaticResource ClickableReplyContainerStyle}"
        Visibility="{Binding ReplyToMessage, Converter={StaticResource ReplyVisibilityConverter}}">
                    <Border.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard Storyboard="{StaticResource PulseAnimation}"/>
                        </EventTrigger>
                    </Border.Triggers>
                    <Border.InputBindings>
                        <MouseBinding MouseAction="LeftClick" 
                      Command="{Binding DataContext.NavigateToReplyMessageCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                      CommandParameter="{Binding}"/>
                    </Border.InputBindings>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border Style="{StaticResource ReplyLineStyle}"/>

                        <StackPanel Grid.Column="1" Orientation="Vertical">
                            <TextBlock Text="{Binding ReplyToMessage.Sender.FirstName}" 
                               Style="{StaticResource ReplyTextStyle}"/>
                            <TextBlock Text="{Binding ReplyToMessage.ContentMess}" 
                               Style="{StaticResource ReplyContentStyle}"
                               Visibility="{Binding ReplyToMessage.IsVoiceMessage, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Invert}"/>
                            <TextBlock Text="🎤 Голосовое сообщение" 
                               Style="{StaticResource ReplyContentStyle}"
                               Visibility="{Binding ReplyToMessage.IsVoiceMessage, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        </StackPanel>
                    </Grid>
                </Border>
                <!-- Текстовое сообщение -->
                <Border x:Name="TextMessageTemplate"
        CornerRadius="10"
        Padding="10" Grid.Row="1"
        Visibility="{Binding IsVoiceMessage, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Invert}">
                    <Border.Background>
                        <MultiBinding Converter="{StaticResource MessageBackgroundConverter}">
                            <Binding Path="SenderId"/>
                            <Binding Path="DataContext.CurrentUserId" RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                        </MultiBinding>
                    </Border.Background>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Основное содержимое сообщения -->
                        <StackPanel Grid.Column="0">
                            <TextBlock Text="{Binding Sender.FirstName}" FontWeight="Bold">
                                <TextBlock.Visibility>
                                    <MultiBinding Converter="{StaticResource ShowUserNameConverter}">
                                        <Binding Path="SenderId"/>
                                        <Binding Path="DataContext.CurrentUserId" RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                                    </MultiBinding>
                                </TextBlock.Visibility>
                            </TextBlock>

                            <TextBlock Text="{Binding ContentMess}" TextWrapping="Wrap"/>

                            <!-- Время и иконка редактирования -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="✎" 
                       Foreground="Gray" 
                       FontSize="10"
                                           Grid.Column="0"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Top"
                       Margin="0,-5,-5,0"
                       ToolTip="Сообщение отредактировано"
                       Visibility="{Binding Timestamp, Converter={StaticResource EditedIndicatorConverter}}"/>

                                <TextBlock Grid.Column="1"
                       Text="{Binding Timestamp, StringFormat='{}{0:dd.MM HH:mm}'}" 
                       FontSize="10" 
                       Foreground="Gray"
                       HorizontalAlignment="Right"/>
                            </Grid>
                        </StackPanel>

                        <!-- Реакции сбоку -->
                        <ItemsControl Grid.Column="1"
              ItemsSource="{Binding Reactions}"
              Margin="5,0,0,0"
              VerticalAlignment="Bottom">
                            <!-- ИЗМЕНИТЕ на Orientation="Horizontal" -->
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" MaxWidth="200"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Button Style="{StaticResource HorizontalReactionButtonStyle}"
                    Command="{Binding DataContext.ToggleReactionCommand, 
                             RelativeSource={RelativeSource AncestorType=UserControl}}"
                    CommandParameter="{Binding}"
                    Cursor="Hand"
                    Margin="2,0,2,0"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>

                </Border>

                <!-- Голосовое сообщение -->
                <Border x:Name="VoiceMessageTemplate"
        CornerRadius="10"
        Padding="10"
        Grid.Row="1"
        Visibility="{Binding IsVoiceMessage, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Border.Background>
                        <MultiBinding Converter="{StaticResource VoiceMessageBackgroundConverter}">
                            <Binding Path="SenderId"/>
                            <Binding Path="DataContext.CurrentUserId" RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                        </MultiBinding>
                    </Border.Background>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Основное содержимое голосового сообщения -->
                        <Grid Grid.Column="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- Первая строка: кнопка, волны, длительность -->
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- Кнопка воспроизведения -->
                                <Button Grid.Column="0"
                        Command="{Binding DataContext.PlayVoiceMessageCommand, 
                                RelativeSource={RelativeSource AncestorType=UserControl}}"
                        CommandParameter="{Binding}"
                        Margin="0,0,10,0">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource PlayButtonStyle}">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <Image x:Name="PlayIcon" Source="D:\Vs project\MusicMessage\MusicMessage\Assets\play_icon.png" Width="20" Height="20"/>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <Image Source="D:\Vs project\MusicMessage\MusicMessage\Assets\pause_icon.png" Width="20" Height="20"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <!-- Визуализация волн -->
                                <ItemsControl Grid.Column="1" 
                              ItemsSource="{Binding WaveformDataList, UpdateSourceTrigger=PropertyChanged}"
                              Style="{StaticResource WaveformStyle}"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Stretch"
                              Height="30">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>

                                <!-- Длительность -->
                                <TextBlock Grid.Column="2"
                           Margin="10,0,0,0"
                           VerticalAlignment="Center"
                           Foreground="#555555">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0:mm\\:ss}">
                                            <MultiBinding.Converter>
                                                <conv:PlaybackTimeConverter/>
                                            </MultiBinding.Converter>
                                            <Binding Path="Duration"/>
                                            <Binding Path="CurrentPlaybackTime"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Grid>

                            <!-- Вторая строка: время сообщения -->
                            <TextBlock Grid.Row="1"
                       Text="{Binding Timestamp, StringFormat='{}{0:dd.MM HH:mm}'}" 
                       FontSize="10" 
                       Foreground="Gray"
                       HorizontalAlignment="Right"
                       Margin="0,5,0,0"/>
                        </Grid>

                        <!-- Реакции сбоку -->
                        <ItemsControl Grid.Column="1"
              ItemsSource="{Binding Reactions}"
              Margin="5,0,0,0"
              VerticalAlignment="Bottom">
                            <!-- ИЗМЕНИТЕ на Orientation="Horizontal" -->
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" MaxWidth="200"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Button Style="{StaticResource HorizontalReactionButtonStyle}"
                    Command="{Binding DataContext.ToggleReactionCommand, 
                             RelativeSource={RelativeSource AncestorType=UserControl}}"
                    CommandParameter="{Binding}"
                    Cursor="Hand"
                    Margin="2,0,2,0"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </Border>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Шапка чата -->
        <local:ChatHeader Grid.Row="0"
                      DataContext="{Binding}"
                      Height="60"/>
        <!-- Лента сообщений -->
        <ListView x:Name="MessagesListView" Grid.Row="1"
      ItemsSource="{Binding Messages}"
      ScrollViewer.VerticalScrollBarVisibility="Auto"
      VirtualizingStackPanel.IsVirtualizing="True"
            BorderThickness="0"
      Background="Transparent"
      HorizontalContentAlignment="Stretch">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>

        </ListView>

        <!-- Панель ответа -->
        <Border Grid.Row="2"
            Background="#FFE3F2FD" 
            CornerRadius="5"
            Padding="8"
            Margin="5,2,5,2"
            Visibility="{Binding IsReplying, Converter={StaticResource BoolToVisibilityConverter}}">
            <DockPanel LastChildFill="True">
                <Button DockPanel.Dock="Right" 
                    Content="✕" 
                    Command="{Binding CancelReplyCommand}"
                    Margin="5,0,0,0"
                    Width="20"
                    Height="20"
                    ToolTip="Отменить ответ"
                    Background="Transparent"
                    BorderThickness="0"/>

                <TextBlock Text="{Binding ReplyPreviewText}" 
                       TextWrapping="Wrap"
                       VerticalAlignment="Center"
                       Margin="5,0,0,0"/>
            </DockPanel>
        </Border>

        <Grid Grid.Row="3" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- Индикатор режима редактирования -->
            <TextBlock Text="Режим редактирования..."
               Foreground="Blue"
               FontStyle="Italic"
               Margin="5,0,0,0"
               VerticalAlignment="Center"
               Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}"/>

            <!-- Текстовое поле ввода -->
            <TextBox Grid.Column="0" TextWrapping="Wrap"
             Text="{Binding MessageText, UpdateSourceTrigger=PropertyChanged}"
             VerticalAlignment="Center"
             MinHeight="40"
             AcceptsReturn="True"
             VerticalScrollBarVisibility="Auto"
             Visibility="{Binding ShowTextInput, Converter={StaticResource BoolToVisibilityConverter}}"/>

            <!-- Визуализация волн во время записи -->
            <ItemsControl Grid.Column="0"
                  ItemsSource="{Binding RecordingWaveformData}"
                  Style="{StaticResource WaveformStyle}"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Stretch"
                  Height="30"
                  Visibility="{Binding IsRecording, Converter={StaticResource BoolToVisibilityConverter}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>

            <!-- Панель подтверждения отправки голосового -->
            <Grid Grid.Column="0" 
          Visibility="{Binding IsRecordingStopped, Converter={StaticResource BoolToVisibilityConverter}}"
          HorizontalAlignment="Stretch"
          VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" 
                   Text="Запись завершена. Отправить?"
                   VerticalAlignment="Center"
                   Margin="10,0"/>

                <Button Grid.Column="1" 
                Content="✅ Отправить" 
                Command="{Binding SendRecordedVoiceCommand}"
                Margin="5,0"
                Width="100"
                Height="30"/>

                <Button Grid.Column="2" 
                Content="🔊 Прослушать" 
                Command="{Binding PreviewRecordedVoiceCommand}"
                Margin="5,0"
                Width="120"
                Height="30"/>

                <Button Grid.Column="3" 
                Content="❌ Отменить" 
                Command="{Binding CancelRecordingCommand}"
                Margin="5,0"
                Width="80"
                Height="30"/>
            </Grid>

            <!-- Таймер записи -->
            <TextBlock Grid.Column="0"
               Text="{Binding RecordingDuration, StringFormat='{}{0:mm\\:ss}'}"
               Margin="0,0,10,0"
               VerticalAlignment="Center"
               HorizontalAlignment="Right"
               Foreground="#555555"
               Visibility="{Binding IsRecording, Converter={StaticResource BoolToVisibilityConverter}}"/>

            <!-- Контейнер для кнопок записи/остановки -->
            <Grid Grid.Column="1" Margin="5,0,0,0" Width="100">
                <!-- Кнопка записи (исчезает при начале записи И во время редактирования) -->
                <Button Content="🎤" 
            Command="{Binding StartRecordingCommand}"
            Width="100"
            Height="40"
            FontSize="14"
            Visibility="{Binding ShowRecordingButton, Converter={StaticResource BoolToVisibilityConverter}}"/>

                <!-- Кнопка остановки (появляется вместо кнопки записи) -->
                <Button Content="⏹" 
            Command="{Binding StopRecordingCommand}"
            Width="100"
            Height="40"
            FontSize="14"
            Visibility="{Binding IsRecording, Converter={StaticResource BoolToVisibilityConverter}}"/>
            </Grid>

            <!-- Кнопка отправки текста (обычный режим) -->
            <Button Grid.Column="2" 
            Content="➤" 
            Command="{Binding SendTextCommand}"
            Margin="5,0,0,0"
            Width="40"
            Height="40"
            FontSize="16"
            FontWeight="Bold"
            Visibility="{Binding ShowSendTextButton, Converter={StaticResource BoolToVisibilityConverter}}"/>

            <!-- Кнопка подтверждения редактирования -->
            <Button Grid.Column="2" 
            Content="✓" 
            Command="{Binding ConfirmEditCommand}"
            Margin="5,0,0,0"
            Width="40"
            Height="40"
            FontSize="16"
            FontWeight="Bold"
            Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}"/>

            <!-- Кнопка отмены редактирования -->
            <Button Grid.Column="3" 
            Content="✕" 
            Command="{Binding CancelEditCommand}"
            Margin="5,0,0,0"
            Width="40"
            Height="40"
            FontSize="16"
            Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}"/>
        </Grid>
        <ProgressBar Grid.Row="2" 
                 Height="5"
                 IsIndeterminate="{Binding IsLoading}"
                 Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibilityConverter}}"
                 VerticalAlignment="Top"/>
    </Grid>
</UserControl>
